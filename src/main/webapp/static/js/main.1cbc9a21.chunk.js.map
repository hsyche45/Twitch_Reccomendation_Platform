{"version":3,"sources":["utils.js","components/Login.js","components/Register.js","components/Favorites.js","components/CustomSearch.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_ORIGIN","loginUrl","login","credential","fetch","method","headers","credentials","body","JSON","stringify","then","response","status","Error","json","registerUrl","register","data","logoutUrl","logout","topGamesUrl","getTopGames","getGameDetailsUrl","searchGameByIdUrl","searchGameById","gameId","searchGameByName","gameName","getGameDetails","id","favoriteItemUrl","getFavoriteItem","getRecommendedItemsUrl","getRecommendations","Login","state","displayModal","handleCancel","setState","signinOnClick","onFinish","message","success","name","props","onSuccess","catch","err","error","render","shape","onClick","style","marginRight","title","visible","onCancel","footer","destroyOnClose","preserve","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","React","Component","Register","signupOnClick","initialValues","remember","SubMenu","Menu","MenuKey","Favorites","displayDrawer","onDrawerClose","onFavoriteClick","VIDEO","STREAM","CLIP","icon","StarFilled","placement","width","onClose","mode","defaultOpenKeys","height","borderRight","selectable","EyeOutlined","map","item","href","url","target","rel","broadcaster_name","YoutubeOutlined","VideoCameraOutlined","CustomSearch","searchOnClick","onSubmit","game_name","SearchOutlined","marginLeft","marginTop","TabPane","Tabs","tabKeys","renderCardTitle","loggedIn","favs","favOnChange","isFav","find","fav","StarOutlined","favItem","favorite","addFavoriteItem","overflow","textOverflow","renderCardGrid","grid","xs","sm","md","lg","xl","dataSource","renderItem","alt","src","thumbnail_url","replace","Home","resources","favoriteItems","favoriteOnChange","favVideos","favStreams","favClips","defaultActiveKey","tab","forceRender","Header","Layout","Content","Sider","App","topGames","onGameSelect","key","customSearchOnSuccess","signinOnSuccess","signoutOnClick","componentDidMount","justify","className","onSelect","LikeOutlined","FireOutlined","game","box_art_url","borderRadius","padding","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1cbc9a21.chunk.js","sourcesContent":["const SERVER_ORIGIN = ';'\r\n\r\n// login api\r\nconst loginUrl = `${SERVER_ORIGIN}/login`;\r\n// credential ==> username + password\r\nexport const login = credential => {\r\n    return fetch(loginUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(credential)\r\n    }).then(response => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to log in');\r\n        }\r\n        return response.json();\r\n    })\r\n}\r\n// register api\r\nconst registerUrl = `${SERVER_ORIGIN}/register`;\r\nexport const register = (data) => {\r\n    return fetch(registerUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to register');\r\n        }\r\n    })\r\n}\r\n// logout api\r\nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\r\nexport const logout = () => {\r\n    return fetch(logoutUrl, {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to log out');\r\n        }\r\n    })\r\n}\r\n// topGames api\r\nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\r\n\r\nexport const getTopGames = () => {\r\n    return fetch(topGamesUrl).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to get top games');\r\n        }\r\n\r\n        return response.json();\r\n    })\r\n}\r\n// getGameDetails api\r\nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\r\n\r\nconst getGameDetails = (gameName) => {\r\n    return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to find the game');\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n}\r\n// searchGameById api\r\nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\r\nexport const searchGameById = (gameId) => {\r\n    return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to find the game');\r\n        }\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport const searchGameByName = (gameName) => {\r\n    return getGameDetails(gameName).then((data) => {\r\n        if (data && data.id) {\r\n            return searchGameById(data.id);\r\n        }\r\n\r\n        throw Error('Fail to find the game')\r\n    })\r\n}\r\n\r\nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\r\n\r\nexport const addFavoriteItem = (favItem) => {\r\n    return fetch(favoriteItemUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ favorite: favItem })\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to add favorite item');\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteFavoriteItem = (favItem) => {\r\n    return fetch(favoriteItemUrl, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ favorite: favItem })\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to delete favorite item');\r\n        }\r\n    })\r\n}\r\n\r\nexport const getFavoriteItem = () => {\r\n    return fetch(favoriteItemUrl, {\r\n        credentials: 'include',\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to get favorite item');\r\n        }\r\n\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\r\n\r\nexport const getRecommendations = () => {\r\n    return fetch(getRecommendedItemsUrl, {\r\n        credentials: 'include',\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw Error('Fail to get recommended item');\r\n        }\r\n\r\n        return response.json();\r\n    })\r\n}\r\n","import { Button, Form, Input, message, Modal } from 'antd';\r\nimport React from 'react';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { login } from '../utils';\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        displayModal: false\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        })\r\n    }\r\n\r\n    signinOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        })\r\n    }\r\n\r\n    onFinish = (data) => {\r\n        login(data)\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                })\r\n                message.success(`Welcome back, ${data.name}`);\r\n                this.props.onSuccess();\r\n            }).catch((err) => {\r\n            message.error(err.message);\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Button shape=\"round\" onClick={this.signinOnClick} style={{ marginRight: '20px' }}>\r\n                    Login</Button>\r\n                <Modal\r\n                    title=\"Log in\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"user_id\"\r\n                            rules={[{ required: true, message: 'Please input your Username!' }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined />}\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Login</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import { Button, Form, Input, message, Modal } from 'antd';\r\nimport React from 'react';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { register } from '../utils';\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        displayModal: false\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        })\r\n    }\r\n\r\n    signupOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        })\r\n    }\r\n\r\n    onFinish = (data) => {\r\n        register(data)\r\n            .then(() => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                })\r\n                message.success(`Successfully signed up`);\r\n            }).catch((err) => {\r\n            message.error(err.message);\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\r\n                    Register</Button>\r\n                <Modal\r\n                    title=\"Register\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_register\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"user_id\"\r\n                            rules={[{ required: true, message: 'Please input your Username!' }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined />}\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"first_name\"\r\n                            rules={[{ required: true, message: 'Please input your Firstname!' }]}\r\n                        >\r\n                            <Input\r\n                                placeholder=\"firstname\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"last_name\"\r\n                            rules={[{ required: true, message: 'Please input your Lastname!' }]}\r\n                        >\r\n                            <Input\r\n                                placeholder=\"lastname\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Register</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Menu, Button, Drawer } from 'antd';\r\nimport { EyeOutlined, YoutubeOutlined, VideoCameraOutlined, StarFilled } from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MenuKey = {\r\n    Streams: 'streams',\r\n    Videos: 'videos',\r\n    Clips: 'clips'\r\n}\r\nclass Favorites extends React.Component {\r\n    state = {\r\n        displayDrawer: false,\r\n    }\r\n\r\n    onDrawerClose = () => {\r\n        this.setState({\r\n            displayDrawer: false,\r\n        })\r\n    }\r\n\r\n    onFavoriteClick = () => {\r\n        this.setState({\r\n            displayDrawer: true,\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        const { VIDEO, STREAM, CLIP } = this.props.data;\r\n\r\n        return (\r\n            <>\r\n                <Button type=\"primary\" shape=\"round\" onClick={this.onFavoriteClick} icon={<StarFilled />}>\r\n                    My Favorites</Button>\r\n                <Drawer\r\n                    title=\"My Favorites\"\r\n                    placement=\"right\"\r\n                    width={720}\r\n                    visible={this.state.displayDrawer}\r\n                    onClose={this.onDrawerClose}\r\n                >\r\n                    <Menu\r\n                        mode=\"inline\"\r\n                        defaultOpenKeys={[MenuKey.Streams]}\r\n                        style={{ height: '100%', borderRight: 0 }}\r\n                        selectable={false}\r\n                    >\r\n                        <SubMenu key={MenuKey.Streams} icon={<EyeOutlined />} title=\"Streams\">\r\n                            {\r\n                                STREAM.map((item) => {\r\n                                    return (\r\n                                        <Menu.Item key={item.id}>\r\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                {`${item.broadcaster_name} - ${item.title}`}\r\n                                            </a>\r\n                                        </Menu.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </SubMenu>\r\n                        <SubMenu key={MenuKey.Videos} icon={<YoutubeOutlined />} title=\"Videos\">\r\n                            {\r\n                                VIDEO.map((item) => {\r\n                                    return (\r\n                                        <Menu.Item key={item.id}>\r\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                {`${item.broadcaster_name} - ${item.title}`}\r\n                                            </a>\r\n                                        </Menu.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </SubMenu>\r\n                        <SubMenu key={MenuKey.Clips} icon={<VideoCameraOutlined />} title=\"Clips\">\r\n                            {\r\n                                CLIP.map((item) => {\r\n                                    return (\r\n                                        <Menu.Item key={item.id}>\r\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                {`${item.broadcaster_name} - ${item.title}`}\r\n                                            </a>\r\n                                        </Menu.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </Drawer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Favorites;","import React from 'react';\r\nimport { Button, Form, Input, message, Modal } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { searchGameByName } from '../utils';\r\n\r\nclass CustomSearch extends React.Component {\r\n    state = {\r\n        displayModal: false\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        })\r\n    }\r\n\r\n    searchOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        })\r\n    }\r\n\r\n    onSubmit = (data) => {\r\n        searchGameByName(data.game_name)\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                })\r\n                this.props.onSuccess(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Button shape=\"round\" onClick={this.searchOnClick} icon={<SearchOutlined />} style={{ marginLeft: '20px', marginTop: '20px'}}>\r\n                    Custom Search </Button>\r\n                <Modal\r\n                    title=\"Search\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                >\r\n                    <Form\r\n                        name=\"custom_search\"\r\n                        onFinish={this.onSubmit}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"game_name\"\r\n                            rules={[{ required: true, message: 'Please enter a game name' }]}\r\n                        >\r\n                            <Input placeholder=\"Game name\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Search</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomSearch;","import React from 'react';\r\nimport { Button, Card, List, message, Tabs, Tooltip } from 'antd';\r\nimport { StarOutlined, StarFilled } from '@ant-design/icons';\r\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\r\n\r\nconst { TabPane } = Tabs;\r\nconst tabKeys = {\r\n    Streams: 'stream',\r\n    Videos: 'videos',\r\n    Clips: 'clips',\r\n}\r\n\r\nconst processUrl = (url) => url\r\n    .replace('%{height}', '252')\r\n    .replace('%{width}', '480')\r\n    .replace('{height}', '252')\r\n    .replace('{width}', '480');\r\n\r\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\r\n    const title = `${item.broadcaster_name} - ${item.title}`;\r\n\r\n    const isFav = favs.find((fav) => fav.id === item.id);\r\n\r\n    const favOnClick = () => {\r\n        if (isFav) {\r\n            deleteFavoriteItem(item).then(() => {\r\n                favOnChange();\r\n            }).catch(err => {\r\n                message.error(err.message)\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        addFavoriteItem(item).then(() => {\r\n            favOnChange();\r\n        }).catch(err => {\r\n            message.error(err.message)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loggedIn &&\r\n                <Tooltip title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}>\r\n                    <Button shape=\"circle\" icon={isFav ? <StarFilled /> : <StarOutlined />} onClick={favOnClick} />\r\n                </Tooltip>\r\n            }\r\n            <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', width: 450 }}>\r\n                <Tooltip title={title}>\r\n                    <span>{title}</span>\r\n                </Tooltip>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\r\n    return (\r\n        <List\r\n            grid={{\r\n                xs: 1,\r\n                sm: 2,\r\n                md: 4,\r\n                lg: 4,\r\n                xl: 6,\r\n            }}\r\n            dataSource={data}\r\n            renderItem={item => (\r\n                <List.Item style={{ marginRight: '20px' }}>\r\n                    <Card\r\n                        title={renderCardTitle(item, loggedIn, favs, favOnChange)}\r\n                    >\r\n                        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <img\r\n                                alt=\"Placeholder\"\r\n                                src={processUrl(item.thumbnail_url)}\r\n                            />\r\n                        </a>\r\n                    </Card>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nconst Home = ({ resources, loggedIn, favoriteItems, favoriteOnChange }) => {\r\n    const { VIDEO, STREAM, CLIP } = resources;\r\n    const { VIDEO: favVideos, STREAM: favStreams, CLIP: favClips} = favoriteItems;\r\n\r\n    return (\r\n        <Tabs\r\n            defaultActiveKey={tabKeys.Streams}\r\n        >\r\n            <TabPane tab=\"Streams\" key={tabKeys.Streams} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\r\n                {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\r\n            </TabPane>\r\n            <TabPane tab=\"Videos\" key={tabKeys.Videos} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\r\n                {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\r\n            </TabPane>\r\n            <TabPane tab=\"Clips\" key={tabKeys.Clips} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\r\n                {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\r\n            </TabPane>\r\n        </Tabs>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { Button, Col, Layout, Menu, message, Row } from 'antd';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { getFavoriteItem, getRecommendations, getTopGames, logout, searchGameById } from './utils';\nimport Favorites from './components/Favorites';\nimport { LikeOutlined, FireOutlined } from '@ant-design/icons';\nimport CustomSearch from './components/CustomSearch';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport Home from './components/Home';\n\nconst { Header, Content, Sider } = Layout;\n\nclass App extends React.Component {\n    state = {\n        loggedIn: false,\n        topGames: [],\n        resources: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n        favoriteItems: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n    }\n\n    favoriteOnChange = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    onGameSelect = ({ key }) => {\n        if (key === 'Recommendation') {\n            getRecommendations().then((data) => {\n                this.setState({\n                    resources: data,\n                })\n            })\n\n            return;\n        }\n\n        searchGameById(key).then((data) => {\n            this.setState({\n                resources: data,\n            })\n        })\n    }\n\n    customSearchOnSuccess = (data) => {\n        this.setState({\n            resources: data,\n        })\n    }\n\n    signinOnSuccess = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    signoutOnClick = () => {\n        logout()\n            .then(() => {\n                this.setState({\n                    loggedIn: false\n                })\n                message.success(`Successfull signed out`);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    componentDidMount = () => {\n        getTopGames()\n            .then((data) => {\n                this.setState({\n                    topGames: data\n                })\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    render = () => (\n        <Layout>\n            <Header>\n                <Row justify=\"space-between\">\n                    <Col>\n                        {\n                            this.state.loggedIn &&\n                            <Favorites data={this.state.favoriteItems} />\n                        }\n                    </Col>\n                    <Col>\n                        {\n                            this.state.loggedIn ?\n                                <Button shape=\"round\" onClick={this.signoutOnClick}>\n                                    Logout</Button> :\n                                (\n                                    <>\n                                        <Login onSuccess={this.signinOnSuccess} />\n                                        <Register />\n                                    </>\n                                )\n                        }\n                    </Col>\n                </Row>\n            </Header>\n            <Layout>\n                <Sider width={300} className=\"site-layout-background\">\n                    <CustomSearch onSuccess={this.customSearchOnSuccess} />\n                    <Menu\n                        mode=\"inline\"\n                        onSelect={this.onGameSelect}\n                        style={{ marginTop: '10px' }}\n                    >\n                        <Menu.Item icon={<LikeOutlined />} key=\"Recommendation\">\n                            Recommend for you!</Menu.Item>\n                        <SubMenu icon={<FireOutlined />} key=\"Popular Games\" title=\"Popular Games\" className=\"site-top-game-list\">\n                            {\n                                this.state.topGames.map((game) => {\n                                    return (\n                                        <Menu.Item key={game.id} style={{ height: '50px' }}>\n                                            <img\n                                                alt=\"Placeholder\"\n                                                src={game.box_art_url.replace('{height}', '40').replace('{width}', '40')}\n                                                style={{ borderRadius: '50%', marginRight: '20px' }}\n                                            />\n                                            <span>\n                        {game.name}\n                      </span>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                    </Menu>\n                </Sider>\n                <Layout style={{ padding: '24px' }}>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            padding: 24,\n                            margin: 0,\n                            height: 800,\n                            overflow: 'auto'\n                        }}\n                    >\n                        <Home\n                            resources={this.state.resources}\n                            loggedIn={this.state.loggedIn}\n                            favoriteItems={this.state.favoriteItems}\n                            favoriteOnChange={this.favoriteOnChange}\n                        />\n                    </Content>\n                </Layout>\n            </Layout>\n        </Layout>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}